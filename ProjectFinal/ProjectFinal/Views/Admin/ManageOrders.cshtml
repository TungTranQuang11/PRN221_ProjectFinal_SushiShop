@model PaginatedList<ProjectFinal.Models.Order>

@{
    ViewData["Title"] = "Manage Orders";
    int counter = 1;
}

<!--====== Start Page Section ======-->
<section class="page-banner">
    <div class="page-bg-wrapper p-r z-1 bg_cover pt-100 pb-110" style="background-image: url(/assets/images/bg/page-bg.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!--=== Page Banner Content ===-->
                    <div class="page-banner-content text-center">
                        <h1 class="page-title">Manage Orders</h1>
                        <ul class="breadcrumb-link">
                            <li><a href="index.html">Home</a></li>
                            <li class="active">Manage Orders</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section><!--====== End Page Section ======-->


<section class="menu-grid-section gray-bg pt-80 pb-130">
    <div class="container">
        <div class="row mb-4">
            <div class="col-lg-12">
                <form method="get" action="@Url.Action("ManageOrders", "Admin")" class="d-flex justify-content-between align-items-center">
                    <div class="input-group me-2">
                        <label class="input-group-text">Start Date:</label>
                        <input type="date" name="startDate" class="form-control" required />
                    </div>
                    <div class="input-group me-2">
                        <label class="input-group-text">End Date:</label>
                        <input type="date" name="endDate" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Filter</button>
                </form>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                @if (ViewBag.ErrorMessage != null)
                {
                    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
                }
                else if (ViewBag.Message != null)
                {
                    <div class="alert alert-info">@ViewBag.Message</div>
                }

                <div class="table-responsive">
                    <table class="table table-bordered table-striped">
                        <thead class="thead-dark">
                            <tr>
                                <th>Customer Name</th>
                                <th>Order Date</th>
                                <th>Total Amount</th>
                                <th>Status</th>
                                <th>Ship Address</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="6" class="text-center">No orders found for the selected date range.</td>
                                </tr>
                            }
                            else
                            {
                                foreach (var order in Model)
                                {
                                    <tr data-order-id="@order.OrderId">
                                        <td>@order.Customer?.FullName</td>
                                        <td>@order.OrderDate?.ToString("yyyy-MM-dd")</td>
                                        <td>@order.TotalAmount</td>
                                        <td class="order-status">
                                            @if (order.Status == "Pending")
                                            {
                                                <span class="text-primary fw-bold">@order.Status</span>
                                            }
                                            else if (order.Status == "Confirmed")
                                            {
                                                <span class="text-success fw-bold">@order.Status</span>
                                            }
                                            else if (order.Status == "Cancelled")
                                            {
                                                <span class="text-danger fw-bold">@order.Status</span>
                                            }
                                            else
                                            {
                                                <span>@order.Status</span>
                                            }
                                        </td>
                                        <td class="order-shipaddress">@order.ShipAddress</td>
                                        <td>
                                            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editOrderModal-@order.OrderId">
                                                Edit
                                            </button>
                                            <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#DeleteOrderModal-@order.OrderId">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>

                                    <!-- Edit Order Modal -->
                                    <div class="modal fade" id="editOrderModal-@order.OrderId" tabindex="-1" aria-labelledby="editOrderModalLabel-@order.OrderId" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="editOrderModalLabel-@order.OrderId">Edit Order</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <form method="post" action="@Url.Action("EditOrder", "Admin")">
                                                        <input type="hidden" name="orderId" value="@order.OrderId" />
                                                        <input type="hidden" name="pageNumber" value="@Model.PageIndex" />
                                                        <div class="mb-3">
                                                            <label for="status-@order.OrderId" class="col-form-label col-auto">Status</label>
                                                            <div class="col">
                                                                <select id="status-@order.OrderId" name="status">
                                                                    <option value="Confirmed" selected="@(order.Status == "Confirmed")">Confirmed</option>
                                                                    <option value="Cancelled" selected="@(order.Status == "Cancelled")">Cancelled</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                        <div class="mb-3 mt-80">
                                                            <label for="shipAddress-@order.OrderId" class="form-label">Ship Address</label>
                                                            <input type="text" class="form-control" id="shipAddress-@order.OrderId" name="shipAddress" value="@order.ShipAddress" required>
                                                        </div>

                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                            <button type="submit" class="btn btn-primary">Save Changes</button>
                                                        </div>
                                                    </form>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Delete Order Modal -->
                                    <div class="modal fade" id="DeleteOrderModal-@order.OrderId" tabindex="-1" aria-labelledby="deleteOrderModalLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="deleteOrderModalLabel">Confirm Deletion</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    Are you sure you want to delete this order - @order.OrderId?
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <form asp-action="DeleteOrder" asp-route-id="@order.OrderId" method="post" class="d-inline">
                                                        <input type="hidden" name="pageNumber" value="@Model.PageIndex" />
                                                        <button type="submit" class="btn btn-danger">Delete</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 mt-40">
                <div class="pagination-container">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("ManageOrders", new { pageNumber = Model.PageIndex - 1, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            <li class="page-item @(Model.PageIndex == 1 ? "active" : "")">
                                <a class="page-link" href="@Url.Action("ManageOrders", new { pageNumber = 1, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">1</a>
                            </li>

                            @if (Model.PageIndex > 3)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }

                            @for (int i = Math.Max(2, Model.PageIndex - 1); i <= Math.Min(Model.TotalPages - 1, Model.PageIndex + 1); i++)
                            {
                                <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("ManageOrders", new { pageNumber = i, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">@i</a>
                                </li>
                            }

                            @if (Model.PageIndex < Model.TotalPages - 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }

                            @if (Model.TotalPages > 1)
                            {
                                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("ManageOrders", new { pageNumber = Model.TotalPages, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">@Model.TotalPages</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("ManageOrders", new { pageNumber = Model.PageIndex + 1, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.2/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/signalrServer")
            .build();

        connection.on("NewOrderCreated", function (order) {
            const orderTable = document.querySelector("table tbody");

            const newRow = document.createElement("tr");
            newRow.setAttribute("data-order-id", order.orderId);
            newRow.innerHTML = `
                                        <td>${order.customerName}</td>
                                        <td>${new Date(order.orderDate).toISOString().split('T')[0]}</td>
                                        <td>${order.totalAmount.toFixed(2)}</td>
                                        <td class="order-status text-primary fw-bold">${order.status}</td>
                                        <td class="order-shipaddress">${order.shipAddress}</td>
                                        <td>
                                            <span class="order-status text-primary fw-bold">Pending</span>
                                        </td>
                                    `;
            orderTable.prepend(newRow);
        });

        connection.on("OrderUpdated", function (order) {
            const row = document.querySelector(`tr[data-order-id='${order.orderId}']`);
            if (row) {
                row.querySelector(".order-status").textContent = order.status;
                row.querySelector(".order-status").className = `order-status fw-bold ${getStatusClass(order.status)}`;
                row.querySelector(".order-shipaddress").textContent = order.shipAddress;

                const statusInput = document.getElementById(`status-${order.orderId}`);
                const shipAddressInput = document.getElementById(`shipAddress-${order.orderId}`);
                if (statusInput && shipAddressInput) {
                    statusInput.value = order.status; 
                    shipAddressInput.value = order.shipAddress; 
                }
            }
        });


        connection.on("OrderDeleted", function (orderId) {
            const row = document.querySelector(`tr[data-order-id='${orderId}']`);
            if (row) {
                row.remove();
            }
        });

        function getStatusClass(status) {
            switch (status) {
                case "Pending": return "text-primary";
                case "Confirmed": return "text-success";
                case "Cancelled": return "text-danger";
                default: return "text-muted";
            }
        }

        // Start SignalR connection
        connection.start().catch(err => console.error("SignalR connection error:", err.toString()));
    </script>
}
