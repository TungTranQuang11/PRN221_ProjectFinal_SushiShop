@model ProjectFinal.Models.Customer

@{
    ViewData["Title"] = "Change Password";
}

<section class="page-banner">
    <div class="page-bg-wrapper p-r z-1 bg_cover pt-180 pb-110" style="background-image: url(/assets/images/bg/page-bg.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="page-banner-content text-center">
                        <h1 class="page-title">Account Details</h1>
                        <ul class="breadcrumb-link">
                            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
                            <li class="active">Change Password</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="profile-section pt-80 pb-80">
    <div class="container">
        <div class="row">
            <div class="col-md-2">
                <div class="list-group">
                    <a href="@Url.Action("Profile", "User")" class="list-group-item list-group-item-action">Account Details</a>
                    <a href="@Url.Action("OrderHistory", "User")" class="list-group-item list-group-item-action">My Orders</a>
                    <a href="@Url.Action("ChangePassword", "User")" class="list-group-item list-group-item-action active">Change Password</a>
                    <a href="@Url.Action("Logout", "Authentication")" class="list-group-item list-group-item-action">Logout</a>
                </div>
            </div>
            <div class="col-md-10">
                <form id="changePasswordForm" method="post" action="@Url.Action("ChangePassword", "User")" onsubmit="return changePassword(event)">
                    <div class="form-group pb-3">
                        <label for="current-password">Current Password <span class="text-danger">*</span></label>
                        <input type="password" id="current-password" name="currentPassword" maxlength="50" class="form-control" required>
                    </div>

                    <div class="form-group pb-3">
                        <label for="new-password">New Password <span class="text-danger">*</span></label>
                        <input type="password" id="password" name="newPassword" maxlength="50" class="form-control" required>
                    </div>

                    <div class="form-group pb-3">
                        <label for="confirm-password">Confirm New Password <span class="text-danger">*</span></label>
                        <input type="password" id="confirm-password" name="confirmPassword" maxlength="50" class="form-control" required>
                    </div>

                    <button type="submit" class="btn btn-secondary">Save changes</button>
                </form>

            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function changePassword(event) {
            event.preventDefault();

            const password = document.getElementById("password").value;
            const confirmPassword = document.getElementById("confirm-password").value;

            if (password !== confirmPassword) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: "Passwords do not match. Please try again.",
                });
                return false;
            }

            const currentPassword = document.getElementById("current-password").value;

            const formData = new FormData();
            formData.append("currentPassword", currentPassword);
            formData.append("newPassword", password);
            formData.append("confirmPassword", confirmPassword);

            fetch("@Url.Action("ChangePassword", "User")", {
                method: "POST",
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Password successfully updated. Please log in again.',
                            showCancelButton: false, 
                            confirmButtonText: 'OK' 
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = "@Url.Action("Logout", "Authentication")";
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: data.error || 'Something went wrong. Please try again.',
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An unexpected error occurred. Please try again.',
                    });
                });
        }
    </script>
}

